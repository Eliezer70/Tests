-- This file was generated using Luraph Obfuscator v13.5.6

return(function(ZJ,aJ,uJ,jJ,MJ,gJ,EJ,P1,bJ,SJ,RJ,eJ,AJ,nJ,UJ,VJ,mJ,IJ,HJ,OJ,cJ,GJ,LJ,yJ,KJ,iJ,sJ,oJ,wJ,pJ,JJ,rJ,kJ,FJ,lJ,TJ,QJ,vJ,tJ,fJ,DJ,XJ,P,...)local q,h,x1,NJ,CJ=pcall,tostring,1,nil,nil;local z=select;while x1~=0X2 do if x1==0x0 then CJ={};x1=2;else NJ={};x1=0;end;end;local A,a=getfenv,({[0]={[0]=0X00000,0X0001,0X2,3,0X4,0x00005,6,0X7,8,0x9,10,11,12,0Xd,14,0XF},{[SJ]=0X001,0x0,0X03,2,5,0X04,7,0X6,9,0x0008,11,QJ,13,12,15,0Xe},{[0X0]=DJ,0X3,0X0,0X1,0x6,EJ,4,5,QJ,11,8,9,0XE,15,12,fJ},{[0x0]=lJ,0X2,0X0001,0X00,EJ,0x00006,5,0X004,0XB,10,0X00009,gJ,0Xf,0xe,0x00d,0XC},{[0]=0x4,5,6,0X0007,0,1,2,3,0X000C,13,0Xe,0x000F,gJ,0X9,10,11},{[0]=0x0005,4,EJ,0X6,0x1,0X00,0X3,DJ,0X0D,12,0Xf,0xE,0X9,8,0XB,10},{[0]=0X00006,7,4,0X00005,0X002,lJ,0,iJ,0X000e,0XF,12,0X0000d,0X000A,11,8,9},{[SJ]=0X007,0X00006,0X5,0x00004,0X03,0x002,0X1,0x00000,0X000F,0Xe,0xd,0Xc,sJ,0XA,9,8},{[0x0]=0X8,0X9,0Xa,0X0b,0X0c,0X0D,14,0X00F,0X0,1,2,0X3,0x4,0X005,6,7},{[0]=rJ,0x008,11,10,13,0X0c,0Xf,0xe,1,0,3,0X002,0X0005,4,0X7,UJ},{[0X0]=10,11,8,9,14,15,ZJ,13,0X2,3,0X0,1,UJ,0X7,4,0x00005},{[0X0]=0xb,0X0a,0X09,8,0X00F,0X00E,fJ,0X0c,3,0X02,0X00001,0,7,6,0x5,0X04},{[0]=12,13,0Xe,0Xf,0X08,9,0X0000A,11,4,0x5,6,7,0X00000,0x1,2,3},{[0X0]=0X0000D,12,15,14,0X9,0X8,11,10,0X5,4,0X7,0X6,0x1,0,0X3,0X02},{[0]=14,0X00f,0XC,fJ,0xA,0Xb,8,9,6,7,4,5,0X2,3,0,1},{[0X0]=0Xf,14,13,0Xc,0Xb,0Xa,9,8,0X7,0X6,AJ,0X0004,3,2,0X001,SJ}});x1=0X0;local B,W=nil,nil;while x1~=0X2 do do if x1~=0 then W=string.char;x1=2;else do B=oJ.sub;end;x1=1;end;end;end;x1=0X3;local Q,C,Z,m,x,d,f,Y=nil,nil,nil,nil,nil,nil,nil,(nil);while x1~=8 do if not(x1<=0X3)then if not(x1<=5)then if x1==0X00006 then Z=GJ;x1=0X0;else C=yJ;x1=6;end;else if x1~=0X00004 then d=KJ;x1=4;else do f=kJ;end;x1=2;end;end;else if not(x1<=1)then if x1==0X2 then Y=tJ;x1=0X8;else Q=string.gsub;x1=0X07;end;else if x1~=0 then x=XJ;x1=0x05;else m={[0]=0X001};x1=1;end;end;end;end;local g=rawset;do x1=0X1;end;local R,s,J=nil,nil,(nil);repeat if x1<=0 then s=coroutine.wrap;do x1=2;end;elseif x1==0X00001 then R={0X4,6,0X0007};do x1=0;end;else J=4294967296;break;end;until(false);local U=unpack or JJ;local y=(iJ);local i,S=next,(LJ);x1=2;local D,o=nil,nil;while x1<0X0003 do if not(x1<=0)then if x1~=0X001 then D=vJ;x1=0X01;else o=(A and A()or VJ);x1=0;end;else do x1=0X3;end;end;end;x1=2;local G,X,K=nil,nil,nil;repeat if x1<=1 then if x1==0 then K=function()local Ed=d(G,y,y);y=y+1;return Ed;end;break;else G=Q(B(G,0X5),'..',function(Dw)if d(Dw,0x2)==72 then do for Oa=0X0,0x00001 do if Oa==0X00000 then X=Y(B(Dw,1,0x1));else return"";end;end;end;else local Gs=(W(Y(Dw,16)));if not(X)then return Gs;else local up=nil;local ap=(0x02);while(true)do if ap<=0 then X=mJ;do ap=0X0001;end;else if ap~=1 then up=S(Gs,X);do ap=0x0000;end;else return up;end;end;end;end;end;end);x1=0;end;else if x1==2 thenx1=3;else x1=0X1;end;end;until false;x1=0x1;local k,t=nil,nil;while x1<2 do if x1~=0 then k=function()local Aa,ia,la,Ea,Ga=1,nil,nil,nil,nil;do while"b\103,X\110\041\053\106"do if not(Aa<=0)then if Aa==0X1 then ia,la,Ea,Ga=d(G,y,y+3);Aa=0X0002;else do y=y+OJ;end;do Aa=0;end;end;else return Ga*uJ+Ea*0x10000+la*0X100+ia;end;end;end;end;do x1=0x0;end;else t=0X80000000;x1=0x2;end;end;local V,E=t-1,TJ;local L=(0X2^0X000034);do local Ny=(0X02);for JQ=0X00001,31 do m[JQ]=Ny;Ny=Ny*0X2;end;end;local v=(J-1);do x1=1;end;local u,O=nil,(nil);do repeat if x1~=0X0 then do u=function()local bO,cO=nil,(nil);local dO=0;repeat if dO==0 then do bO,cO=k(),k();end;dO=1;else if cO>=t then cO=cO-J;end;break;end;until(false);return cO*J+bO;end;end;x1=0x0000;else O=function(ew,ww,Dw)local Iw=(nil);do for d_=0X00,0X2 do if d_<=0 then Iw=(ew/m[ww])%m[Dw];else if d_==1 then Iw=Iw-Iw%1;else do return Iw;end;end;end;end;end;end;x1=2;end;until x1>=2;end;local T=function()local i1=(k());local l1=k();local A1,E1,X1=0X0001,nil,nil;do while A1<0X3 do if A1<=0 then do E1=(-1)^O(l1,0X00001f,1);end;do A1=0X2;end;else if A1==1 then if not(i1==0 and l1==0x0)then else return 0;end;A1=0X0;else X1=O(l1,0X14,0xb);do A1=3;end;end;end;end;end;local c1,N1=1,nil;for bm=0,0X02 do do if bm<=0 then N1=O(l1,0X000,20)*J+i1;else if bm==0X001 then if X1==0 then if N1~=0 then local zQ=0;while zQ<0X2 do if zQ~=0 then c1=0x0;do zQ=0X00002;end;else X1=1;do zQ=0x00001;end;end;end;else do return E1*SJ;end;end;else if X1==0x7Ff then if N1~=0x0 then return E1*(1/0);else return E1*(0/0);end;end;end;else return E1*(0x02^(X1-1023))*(N1/L+c1);end;end;end;end;end;local I=((aJ or bit32));local e=(I and I[IJ]or function(iE,yE)iE=iE%J;local CE=(0X001);yE=yE%J;local mE,sE=0,nil;while'\033\086\096'do if not(mE<=0)then if mE~=0X0001 then while iE>0x0 and yE>0X0 do local Et,jt,vt=0X002,nil,(nil);do while Et<0X4 do if Et<=1 then if Et==0 then iE=(iE-jt)/16;Et=0X0004;else vt=yE%16;Et=3;end;else do if Et~=2 then sE=sE+a[jt][vt]*CE;Et=0;else jt=iE%eJ;Et=1;end;end;end;end;end;do for Ox=0x0,1 do if Ox~=0X00 then CE=CE*16;else yE=(yE-vt)/16;end;end;end;end;mE=1;else return sE+iE*CE+yE*CE;end;else sE=SJ;mE=0X02;end;end;end);local b=I and I[bJ]or function(Ov,dv)Ov=Ov%J;local ev=1;while 0.6185959244646329 do if ev==0X0 then return((Ov+dv)-e(Ov,dv))/2;else dv=dv%J;ev=0;end;end;end;local F=(I and I.bor or function(p7,C7)p7=p7%J;C7=C7%J;return v-b(v-p7,v-C7);end);local p=(I and I[FJ]);local c,l=I and I.bnot or function(cN)do return v-(cN%J);end;end,(rawget);local H=I and I.rshift;x1=1;local w,j,N=nil,nil,nil;while-0x6e288551 do if x1<=0X01 then if x1==0 then j=function()local pS,SS=0,0;repeat local Ok=(d(G,y,y));do y=y+1;end;SS=F(SS,p(b(Ok,127),pS));if b(Ok,128)==0 then do return SS;end;end;pS=pS+7;until false;end;do x1=2;end;else do p=p or function(Iv,Wv)local cv=(2);repeat if not(cv<=0X0)then if cv==0x01 then return(Iv*m[Wv])%J;else do if Wv>=0x20 then return 0x0;end;end;do cv=0x0;end;end;else if Wv<0X0 then return H(Iv,-Wv);end;cv=0X001;end;until false;end;end;x1=4;end;else if not(x1<=2)then if x1~=0X03 then H=H or function(C0,Z0)if Z0>=0X020 then return 0X0;end;do if not(Z0<0)then else do return p(C0,-Z0);end;end;end;local f0=((C0%J/m[Z0]));return f0-f0%0X00001;end;x1=0x3;else w={[0X00008]=gJ,[0X0]=2,[0X4]=1,[5]=0x008,[0X07]=3,[0]=0X5,[0X2]=2,[2]=gJ,[5]=9,[5]=0x009,[6]=2};x1=0X00000;end;else do N=nJ;end;break;end;end;end;local PJ=(K());local xJ=(K());local zJ=(function(ms)local Gs,ls,ys,us,Ks,Zs=0X6,nil,nil,nil,nil,nil;do while"b\113\069a\091v"do if not(Gs<=3)then if Gs<=5 then if Gs==4 then do xJ=(0X000069*xJ+ms)%cJ;end;Gs=0X2;else Zs=e(ls[4],xJ);Gs=0X00004;end;else if Gs==6 then do ls={d(G,y,y+3)};end;Gs=3;else us=e(ls[0X2],xJ);Gs=1;end;end;elseif not(Gs<=0X00001)then if Gs==0X0002 then do y=y+4;end;Gs=0;else do ys=e(ls[1],xJ);end;Gs=0x7;end;else do if Gs==0X000 then return Zs*0X1000000+Ks*65536+us*0x100+ys;else Ks=e(ls[0X00003],xJ);Gs=0X5;end;end;end;end;end;end);local r=pJ;do x1=0x0;end;local qJ,hJ,M=nil,nil,nil;while x1<=2 do do if x1<=0 then qJ=function(...)return z("\035",...),{...};end;x1=0X2;else do if x1==0x1 then M=function()local kf=2;local of=(nil);repeat if kf<=0 then if not(of>V)then else do return of-J;end;end;kf=0X1;else do if kf==0X0001 then return of;else of=j();kf=0x0;end;end;end;until false;end;x1=0x3;else hJ=1;do x1=1;end;end;end;end;end;end;x1=2;local YJ,BJ,dJ,WJ=nil,nil,nil,(nil);while x1~=6 do if x1<=0X2 then do if not(x1<=0x0)then if x1==1 then do NJ[0x1]=CJ;end;x1=0X6;else YJ=function(GH)local BH,bH=nil,(nil);for an=0X0,4 do if an<=1 then if an==0 then BH=k();else bH="";end;elseif not(an<=0x00002)then if an~=0X003 then return bH;else y=y+BH;end;else for A6=1,BH,7997 do local i6,l6=0X00003,(nil);local J6=A6+7997-0X1;while i6<4 do if i6<=1 then do if i6~=0x00000 then bH=bH..W(U(l6));i6=0X0004;else for O4=1,#l6 do for cd=0,0X1 do if cd~=0 then PJ=(GH*PJ+0x000029)%256;else l6[O4]=e(l6[O4],PJ);end;end;end;do i6=0X1;end;end;end;else if i6==0X2 then l6={d(G,y+A6-iJ,y+J6-1)};do i6=0X00000;end;else if not(J6>BH)then else J6=BH;end;i6=0X2;end;end;end;end;end;end;end;x1=0;end;else x1=3;end;end;else if not(x1<=0X3)then if x1==4 then WJ=dJ();x1=1;else function dJ()local Yb,Sb,Eb=0X0002,nil,nil;while Yb~=0X003 do if not(Yb<=0X00)then do if Yb==0x0001 then Sb={};Yb=0X0000;else Yb=1;end;end;else do Eb={mJ,nil,nil,nil,nil,nil,{},{},{}};end;Yb=0X03;end;end;local Ib=(1);do(Eb)[19]=K();end;Yb=0;local Mb=(nil);while Yb~=4 do do if not(Yb<=1)then if Yb==0x2 then(Eb)[QJ]=K();Yb=3;else Mb=K();Yb=4;end;elseif Yb~=0X0 then(Eb)[UJ]=j();Yb=0X00002;else Eb[OJ]=j();do Yb=1;end;end;end;end;Yb=0;local Jb=nil;repeat if Yb<=0 then do Eb[0X1]=O(Mb,0X00001,1)~=0;end;do Yb=1;end;else if Yb==1 then do Eb[0X0003]=O(Mb,0X02,1)~=SJ;end;Yb=0X2;else Jb={};do Yb=3;end;end;end;until Yb>=3;local bb=Eb[9];Yb=0;local Bb,cb,ob=nil,nil,nil;repeat if not(Yb<=0x001)then if not(Yb<=0X2)then if Yb==0x3 then for TK=1,ob do local YK,FK=nil,(nil);local DK=0X1;do while''do if DK==0X000 then FK=k();break;else YK=k();DK=0x0;end;end;end;DK=1;local KK=(nil);do repeat do if DK~=0X00000 then KK=k();DK=0;else for dz=YK,FK do Eb[gJ][dz]=KK;end;do DK=2;end;end;end;until DK==0X2;end;end;Yb=0X5;else cb={};Yb=1;end;else do ob=k();end;Yb=3;end;else if Yb==0 then Bb=k()-HJ;Yb=0X4;else for Ri=0,Bb-1 do do bb[Ri]=dJ();end;end;Yb=2;end;end;until Yb>=0x05;Eb[16]=k();local Nb=nil;do for Yc=0X00000,3 do if not(Yc<=0x001)then if Yc~=2 then Nb=k()-RJ;else Eb[11]=K();end;else if Yc==0 then(Eb)[0XA]=k();else Eb[5]=j();end;end;end;end;Yb=1;local nb,ub=nil,nil;while Yb~=3 do if not(Yb<=0X000)then if Yb~=0x01 then ub=K()~=0X0;do Yb=0;end;else nb=K();Yb=0X2;end;else for N5=1,Nb do local Z5,P5,x5=nil,nil,nil;for m5=0,0x6 do do if not(m5<=2)then if m5<=4 then if m5==0X3 then if Z5==0X0F8 then P5=u();elseif Z5==132 then P5=wJ;elseif Z5==0X013 then P5=jJ;elseif Z5==0x32 then P5=u();elseif Z5==202 then do P5=T()+k();end;elseif Z5==246 then do P5=B(YJ(nb),3);end;elseif Z5==MJ then P5=B(YJ(nb),K());elseif Z5==96 then do P5=B(YJ(nb),k());end;elseif Z5==0Xdd then P5=B(YJ(nb),k());elseif Z5==189 then do P5=B(YJ(nb),4);end;elseif Z5==86 then P5=T();end;else x5={P5,{}};end;elseif m5~=0X5 then Ib=Ib+1;else(cb)[Ib]=x5;end;else if not(m5<=0X0)then do if m5==0X1 then P5=nil;else Sb[N5-1]=Ib;end;end;else Z5=K();end;end;end;end;do if not(ub)then else local m6=0;while m6<=0X001 do do if m6==0 then CJ[hJ]=x5;m6=0X1;else hJ=hJ+0x1;m6=0X0002;end;end;end;end;end;end;do Yb=0X0003;end;end;end;Eb[P1]=K();local db=(Eb[0X0007]);do Yb=0X003;end;local wb=nil;do while Yb<5 do if not(Yb<=1)then do if Yb<=2 then for yp=1,wb do local Fp=(nil);do for bF=0,0X1 do if bF==0 then Fp=Eb[0X0007][yp];else for Uf,gf in ipairs(R)do local Yf=w[gf];local Lf=(Fp[Yf]);if Lf==0Xb then local Qp,Pp=nil,nil;for yI=0,2 do if not(yI<=0)then if yI~=0X1 then if not(Pp)then else local ZY=(nil);local TY=(2);while TY~=3 do if not(TY<=0x0)then if TY==0X1 then do(ZY)[#ZY+0X1]={Fp,Yf};end;TY=0X3;else(Fp)[Yf]=Pp[0x0001];TY=0;end;else ZY=Pp[2];TY=0x00001;end;end;end;else Pp=cb[Qp];end;else do Qp=Sb[Fp[gf]];end;end;end;elseif Lf==0X0000E then(Fp)[gf]=yp+Fp[gf]+0X1;end;end;end;end;end;end;do Yb=0X1;end;else if Yb~=0X3 then for VG=iJ,wb do(db)[VG]={[6]=M(),[0X3]=K(),[5]=j(),[0X4]=M(),[1]=K(),[DJ]=K(),[0X0007]=M()};end;Yb=0X2;else wb=k()-0x13544;Yb=0x4;end;end;end;else if Yb==0X00 then do(Eb)[2]=Jb;end;Yb=5;else(Eb)[17]=k();Yb=0;end;end;end;end;do Yb=0X0;end;repeat if Yb==0X0 then for NR=0X1,j()do(Jb)[NR]={K(),j()};end;Yb=1;else return Eb;end;until false;end;x1=4;end;else function BJ(w0,f0,K0)local j0,l0,Q0=w0[0x06],w0[5],(w0[8]);local c0,N0,A0=w0[0X1],w0[0X0003],(w0[0X4]);local U0,I0=w0[0X0007],w0[9];local i0=f({},{__mode="v"});local C0=nil;C0=function(...)local YM={};local mM=(0X1);local lM=((A and A()or _ENV));local fM=(lM==o and f0 or lM);local EM,jM=qJ(...);local GM=({[0x00002]=YM,[1]=w0});EM=EM-1;do for ni=0,EM do do if j0>ni then(YM)[ni]=jM[ni+1];else break;end;end;end;end;local eM=(0X000);if not c0 then jM=nil;else if N0 then YM[j0]={n=EM>=j0 and EM-j0+1 or 0x0,U(jM,j0+0X1,EM+0X1)};end;end;if fM==lM then elseif not(Z)then _ENV=fM;else Z(C0,fM);end;local BM,hM,MM,rM=q(function()do while 0.7890155610648113 do local tV=U0[mM];local JV=tV[0X5];do mM=mM+1;end;if JV>=0X2D then if JV>=67 then do if JV>=78 then do if JV<84 then if JV>=0X51 then if JV>=0X52 then do if JV==83 then local aM=tV[0X00004];YM[aM]=YM[aM](YM[aM+0X1],YM[aM+0X2]);eM=aM;else local Hq=(K0[tV[0X7]]);(YM)[tV[4]]=Hq[1][Hq[0X2]];end;end;else local tu=tV[4];YM[tu](YM[tu+0X001]);do eM=tu-0X1;end;end;else if JV>=0x4F then if JV~=0x50 then do YM[tV[0X4]]=YM[tV[0X7]][tV[0x2]];end;else YM[tV[0X4]]=#YM[tV[7]];end;else do(YM)[tV[4]]=-YM[tV[0X7]];end;end;end;else do if not(JV>=0x0057)then if JV>=85 then do if JV~=86 then do if tV[0X6]==60 then mM=mM-1;U0[mM]={[7]=(tV[0x7]-215),[0X5]=0x01d,[0x04]=(tV[0X4]-0X0000d7)};else repeat local lg,fg=i0,(YM);do if not(#lg>0)then else local JQ={};for Dc,wc in i,lg do for J0,d0 in i,wc do if not(d0[0X1]==fg and d0[2]>=0X0000)then else local fx=d0[0X2];do if not(not JQ[fx])then else JQ[fx]={fg[fx]};end;end;d0[1]=JQ[fx];do d0[0X2]=1;end;end;end;end;end;end;until true;return false,tV[0X004],eM;end;end;else YM[tV[4]]=YM[tV[0x00007]]%tV[0X002];end;end;else local Rz=tV[4];local zz=s(function(...)r();for ug,Dg,ig,eg,Lg,Mg,Jg,Kg,mg,Ig in...do(r)(true,{ug,Dg,ig,eg,Lg,Mg,Jg,Kg,mg,Ig});end;end);zz(YM[Rz],YM[Rz+1],YM[Rz+0X0002]);eM=Rz;(YM)[Rz]=zz;do mM=tV[0X7];end;end;else if JV<0X58 then do YM[tV[0X4]]=YM[tV[7]]>=YM[tV[0X6]];end;else if JV~=89 then local L5=YM[tV[0x7]]/YM[tV[0X6]];(YM)[tV[4]]=L5-L5%0X0001;else do(YM[tV[4]])[YM[tV[0X7]]]=YM[tV[0x006]];end;end;end;end;end;end;end;else if not(JV<0x0048)then if JV>=0x4B then if JV>=0X4C then if JV==0X4d then local m4=tV[4];local e4,p4,d4=YM[m4],YM[m4+0X001],YM[m4+0x0002];do(YM)[m4]=s(function()do for bL=e4,p4,d4 do r(true,bL);end;end;end);end;mM=tV[0X007];else local VV=(I0[tV[0X007]]);local SV=(VV[2]);local gV,LV=#SV,(nil);if not(gV>0)then else LV={};for oL=1,gV do local uL=(SV[oL]);do if uL[1]~=0 then LV[oL-0x1]=K0[uL[2]];else(LV)[oL-0X1]={YM,uL[2]};end;end;end;E(i0,LV);end;YM[tV[4]]=BJ(VV,fM,LV);end;else mM=tV[0X00007];end;else do if JV<73 then for qF=tV[0X004],tV[7]do(YM)[qF]=nil;end;else if JV==74 then do YM[tV[0x04]]=YM[tV[0x7]]-YM[tV[6]];end;else if YM[tV[0X7]]~=YM[tV[6]]then else do mM=tV[0x4];end;end;end;end;end;end;else if not(JV<0X45)then if JV<0X46 then(YM)[tV[0X4]]=YM[tV[7]]<=YM[tV[6]];else do if JV~=71 then local Ec=(tV[0X4]);YM[Ec](U(YM,Ec+1,eM));eM=Ec-1;else local MG=tV[7];local oG=YM[MG];for NI=MG+1,tV[6]do oG=oG..YM[NI];end;YM[tV[0X4]]=oG;end;end;end;else do if JV==68 then do YM[tV[4]]=YM[tV[0X7]]<YM[tV[0X6]];end;else local QU,DU=tV[0X4],(tV[0X00006]-0x1)*0X000032;local AU=YM[QU];for bs=0X001,eM-QU do AU[DU+bs]=YM[QU+bs];end;end;end;end;end;end;end;else if not(JV>=56)then if not(JV<50)then if not(JV<53)then do if JV<54 then if YM[tV[7]]==tV[2]then mM=tV[4];end;else if JV==0X37 then local F_=tV[0X0004];local T_=s(function(...)(r)();for gF in...do(r)(true,gF);end;end);T_(YM[F_],YM[F_+1],YM[F_+0X2]);eM=F_;(YM)[F_]=T_;do mM=tV[7];end;else NJ[tV[0x00007]]=YM[tV[4]];end;end;end;else if JV>=51 then if JV==52 then local MO=(tV[0X6]-0X1)*50;local yO=(tV[4]);local VO=(YM[yO]);for ys=1,tV[0X07]do VO[MO+ys]=YM[yO+ys];end;else eM=tV[4];(YM)[eM]=YM[eM]();end;else if not(not(YM[tV[0X7]]<YM[tV[6]]))then else mM=tV[4];end;end;end;else if not(JV<0X002F)then do if not(JV>=0X30)then(YM)[tV[0X0004]]=H(YM[tV[7]],YM[tV[0X6]]);else do if JV==49 then local sb=tV[0X7];do YM[tV[0x00004]]=YM[sb]..YM[sb+1];end;else(YM[tV[4]])[tV[0X03]]=YM[tV[0x0006]];end;end;end;end;else do if JV==46 then repeat local xE,OE,NE=i0,YM,tV[0X4];do if not(#xE>0x0)then else local hy=({});for My,ny in i,xE do do for dx,ix in i,ny do if not(ix[0X0001]==OE and ix[0X2]>=NE)then else local TR=(ix[2]);if not hy[TR]then hy[TR]={OE[TR]};end;ix[0X1]=hy[TR];(ix)[0x2]=1;end;end;end;end;end;end;until true;else local sL=(tV[0X4]);eM=sL+tV[7]-1;YM[sL](U(YM,sL+0x001,eM));eM=sL-1;end;end;end;end;else do if not(JV<61)then if not(JV>=64)then do if JV>=62 then if JV~=63 then YM[tV[4]]=e(YM[tV[0X7]],YM[tV[0X6]]);else do YM[tV[0X04]]={U({},1,tV[0X7])};end;end;else do YM[tV[4]][YM[tV[0X00007]]]=tV[2];end;end;end;else do if JV>=0X041 then if JV==0X42 then local HW=tV[0x0004];YM[HW]=YM[HW](YM[HW+1]);do eM=HW;end;else repeat local qb,Lb=i0,(YM);if not(#qb>0)then else local zf={};do for nW,fW in i,qb do for fL,XL in i,fW do if XL[1]==Lb and XL[0X2]>=0 then local eP=XL[2];if not zf[eP]then(zf)[eP]={Lb[eP]};end;(XL)[1]=zf[eP];do(XL)[0X2]=1;end;end;end;end;end;end;until true;return true,tV[0X00004],0;end;else do if tV[6]==0X004d then mM=mM-1;U0[mM]={[5]=0X1D,[0X0007]=(tV[0x7]-159),[0x00004]=(tV[4]-0x9f)};elseif tV[6]~=0x0096 then do if not(YM[tV[4]])then else do mM=tV[7];end;end;end;else mM=mM-1;U0[mM]={[0X05]=80,[4]=(tV[4]-201),[0X7]=(tV[0X7]-0XC9)};end;end;end;end;end;else do if JV<0X3a then if JV==0X39 then do YM[tV[4]]=false;end;else do if not(not(YM[tV[7]]<=tV[2]))then else mM=tV[4];end;end;end;else if not(JV>=59)then GM[tV[7]]=YM[tV[0X04]];else if JV==0x3C then local ih=tV[4];local yh=YM[tV[0X00007]];(YM)[ih+1]=yh;YM[ih]=yh[tV[2]];else local Of=(tV[0X004]);(YM[Of])(YM[Of+0X01],YM[Of+0X2]);eM=Of-1;end;end;end;end;end;end;end;end;else if JV>=0X16 then if JV<33 then if not(JV<0X1b)then do if not(JV>=0x01e)then if JV>=28 then if JV==0x00001D then local x4=(tV[0X0004]);local b4=EM-j0;if not(b4<0X00000)then else b4=-1;end;do for ls=x4,x4+b4 do YM[ls]=jM[j0+(ls-x4)+0X00001];end;end;eM=x4+b4;else YM[tV[4]]=YM[tV[7]]+YM[tV[0x6]];end;else do YM[tV[4]]=GM[tV[0x7]];end;end;else if JV>=31 then do if JV==32 then if tV[6]==241 then mM=mM-1;do(U0)[mM]={[7]=(tV[0X7]-57),[4]=(tV[4]-57),[5]=16};end;else do repeat local Yl,ul=i0,YM;if not(#Yl>0x0)then else local LN=({});for Ev,Iv in i,Yl do for Nm,im in i,Iv do if im[0X001]==ul and im[2]>=0 then local Vs=(im[0x2]);do if not(not LN[Vs])then else do(LN)[Vs]={ul[Vs]};end;end;end;(im)[1]=LN[Vs];im[0X2]=0X1;end;end;end;end;until true;end;do return;end;end;else local EO=(tV[4]);local JO=(tV[7]);if JO==0X00000 then else do eM=EO+JO-1;end;end;local VO,ZO,aO=tV[6],nil,(nil);if JO==1 then ZO,aO=qJ(YM[EO]());else ZO,aO=qJ(YM[EO](U(YM,EO+0x1,eM)));end;if VO~=1 then do if VO==0X0 then ZO=ZO+EO-1;eM=ZO;else ZO=EO+VO-0X2;do eM=ZO+0X1;end;end;end;local S8=0;for I5=EO,ZO do S8=S8+0X1;YM[I5]=aO[S8];end;else do eM=EO-0X1;end;end;end;end;else repeat local yu,Ou=i0,YM;if#yu>0 then local e5={};for q_,D_ in i,yu do for lr,yr in i,D_ do if yr[1]==Ou and yr[2]>=0x0 then local Oe=(yr[2]);if not e5[Oe]then(e5)[Oe]={Ou[Oe]};end;(yr)[0X1]=e5[Oe];yr[0X02]=0x1;end;end;end;end;until true;return true,tV[4],0X001;end;end;end;else if JV<24 then if JV==23 then YM[tV[4]]=fM[tV[3]];else(YM)[tV[0X4]]=c(YM[tV[0X7]]);end;else if not(JV>=25)then local ko=(tV[0X4]);local Eo=tV[0x0007];eM=ko+Eo-1;do repeat local YB,eB=i0,YM;if not(#YB>0x0)then else local CC={};for IV,bV in i,YB do for Zi,mi in i,bV do if mi[1]==eB and mi[2]>=0X0 then local Hd=mi[2];if not CC[Hd]then(CC)[Hd]={eB[Hd]};end;(mi)[0X00001]=CC[Hd];(mi)[0X002]=1;end;end;end;end;until true;end;do return true,ko,Eo;end;else if JV==0X1a then do(YM)[tV[0X4]]=YM[tV[0X007]]^YM[tV[0X6]];end;else do YM[tV[0X004]]=YM[tV[0X7]]>YM[tV[0X00006]];end;end;end;end;end;else do if not(JV<0X00027)then if not(JV>=42)then if not(JV>=0x28)then if YM[tV[7]]~=YM[tV[6]]then do mM=tV[4];end;end;else do if JV==41 then YM[tV[4]]=YM[tV[7]]*YM[tV[0X06]];else local Iu=(tV[0X4]);local Du,fu,tu=YM[Iu]();if Du then YM[Iu+0X00001]=fu;YM[Iu+2]=tu;mM=tV[7];end;end;end;end;else if JV>=0X0002b then do if JV~=0X0002c then if not(YM[tV[7]]<=YM[tV[0X6]])then do mM=tV[0X0004];end;end;else(YM)[tV[4]]=tV[3];end;end;else do if YM[tV[7]]<=YM[tV[6]]then mM=tV[0X00004];end;end;end;end;else do if not(JV<0X0024)then if not(JV<37)then do if JV~=38 then fM[tV[3]]=YM[tV[0x04]];else if tV[6]~=143 then do if not(not YM[tV[4]])then else mM=tV[0X007];end;end;else mM=mM-1;U0[mM]={[0X004]=(tV[0x4]-32),[5]=0x2e,[7]=(tV[7]-32)};end;end;end;else local A8=tV[0x4];local d8,l8=YM[A8]();if d8 then do for O2=0X1,tV[0X06]do(YM)[A8+O2]=l8[O2];end;end;mM=tV[0x7];end;end;else if JV>=0x0022 then do if JV~=35 then do(YM)[tV[0X4]]=YM[tV[0x007]]%YM[tV[6]];end;else(YM)[tV[0X004]]={};end;end;else do YM[tV[0X4]][tV[0X3]]=tV[0X02];end;end;end;end;end;end;end;else if not(JV>=11)then do if not(JV>=5)then if JV<0X2 then if JV~=1 then do(YM)[tV[0X004]]=b(YM[tV[7]],YM[tV[0X00006]]);end;else YM[tV[4]]=tV[3];end;else if JV>=0X3 then if JV~=0X4 then(YM)[tV[4]]=YM[tV[0X7]]~=tV[2];else local JQ=(tV[0X4]);local VQ=s(function(...)(r)();do for nX,sX in...do r(true,nX,sX);end;end;end);(VQ)(YM[JQ],YM[JQ+0x01],YM[JQ+2]);eM=JQ;YM[JQ]=VQ;mM=tV[0X7];end;else(YM)[tV[4]]=YM[tV[7]]/YM[tV[0x00006]];end;end;else do if not(JV<8)then if JV<9 then if tV[0X6]==0X9A then mM=mM-1;(U0)[mM]={[0x5]=0x0000a,[0X04]=(tV[4]-104),[0X007]=(tV[7]-0x68)};else do(YM)[tV[0X4]]=not YM[tV[7]];end;end;else if JV~=0XA then(YM)[tV[0x4]]=F(YM[tV[0X7]],YM[tV[6]]);else if tV[0x6]~=0Xde then YM[tV[0X4]]=YM[tV[7]];else mM=mM-0x1;(U0)[mM]={[5]=0x00005,[0x07]=(tV[0X7]-172),[0x4]=(tV[0X0004]-0X00Ac)};end;end;end;else if JV<0X6 then if tV[6]~=0X0025 then do repeat local jf,Of=i0,(YM);if not(#jf>0X0)then else local Ct=({});for VN,bN in i,jf do for Bn,vn in i,bN do if vn[1]==Of and vn[0X2]>=0 then local f8=vn[2];do if not Ct[f8]then Ct[f8]={Of[f8]};end;end;do(vn)[0x01]=Ct[f8];end;do vn[0x002]=0X1;end;end;end;end;end;until true;end;local Pv=tV[4];return false,Pv,Pv+tV[7]-0X2;else do mM=mM-1;end;do U0[mM]={[0X0007]=(tV[0x0007]-0x0000DC),[0x5]=0x20,[0x4]=(tV[0x4]-0XDC)};end;end;else do if JV~=7 then do if YM[tV[0X0007]]==tV[0X00002]then else do mM=tV[0X004];end;end;end;else YM[tV[0x004]]=NJ[tV[7]];end;end;end;end;end;end;end;else if JV>=16 then do if JV<19 then if JV<17 then YM[tV[0X4]]=nil;else do if JV==0X0012 then local qq=tV[0X004];local Kq,lq=YM[qq]();if not(Kq)then else mM=tV[7];YM[qq+3]=lq;end;else YM[tV[0X4]]=YM[tV[0X7]]~=YM[tV[0X6]];end;end;end;else if not(JV>=0X14)then if tV[0x6]==144 then mM=mM-1;U0[mM]={[0x5]=16,[0X00007]=(tV[7]-0X5D),[0X4]=(tV[0X4]-93)};else local RP=(tV[0X00004]);do for dV=RP,RP+(tV[7]-1)do YM[dV]=jM[j0+(dV-RP)+1];end;end;end;else if JV~=0x15 then do(YM)[tV[0X4]]=YM[tV[0X7]]==YM[tV[0X6]];end;else local Vd=(K0[tV[7]]);do Vd[0x01][Vd[2]]=YM[tV[4]];end;end;end;end;end;else if JV>=13 then if not(JV>=14)then(YM)[tV[4]]=true;else if JV~=0xf then YM[tV[4]]=YM[tV[7]][YM[tV[0X6]]];else local tO=(tV[4]);do(YM)[tO]=YM[tO](U(YM,tO+1,eM));end;eM=tO;end;end;else if JV~=0XC then local su=tV[4];local fu,Xu=YM[su]();if fu then YM[su+0X0001]=Xu;mM=tV[0x7];end;else do eM=tV[0x0004];end;YM[eM]();eM=eM-0X1;end;end;end;end;end;end;end;end;end);if not(BM)then do if C(hM)~="string"then N(hM,0);else if not(D(hM,'at\116e\109p\116\032t\111 yi\101ld\032\097\099ro\115\115\032\109e\116\097\109e\116\104o\100\047C%-\099\097l\108 bo\117n\100a\114y'))then else return coroutine.yield();end;do if D(hM,"^.-:%d+: ")then(N)('Lu\114a\112h\032\083\099\114\105\112t:'..(Q0[mM-0X1]or"(internal)")..':\032'..h(hM),0x000);else(N)(hM,0X0);end;end;end;end;else if hM then if rM~=0X0001 then return YM[MM](U(YM,MM+1,eM));else return YM[MM]();end;elseif MM then do return U(YM,MM,rM);end;end;end;end;if not(Z)then else(Z)(C0,f0);end;return C0;end;x1=0x5;end;end;end;CJ=nil;return BJ(WJ,o,mJ)(...);end)(0X0c,bit,0X0001000000,false,0x93,0X8,7,18,'\098a\110d',0X00000,97459,16,5,error,0X00006,_ENV,nil,"b\120\111\114",35174,4,0X100,setfenv,string.rep,type,string.byte,0X1,11,string,true,coroutine.yield,table.unpack,0X9,setmetatable,"l\115hift",0X3,table.insert,10,string.match,tonumber,13,2,assert,{39577,0X000C04f2535,875245827,707921858,0X245823c1,0X0000A0995e60,2106943943,2537816051,0x008229014b},...);
